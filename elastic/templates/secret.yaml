kind: secret
name: elasticsearch-config
type: opaque
data:
  encoding: plain
  payload: |-
    cluster.name: {{ .Values.elasticsearch.config.clusterName | quote }}
    network.host: {{ .Values.elasticsearch.config.networkHost }}
    node.store.allow_mmap: {{ .Values.elasticsearch.config.nodeStore.allowMmap }}
    xpack.security.enabled: {{ .Values.elasticsearch.config.security.enabled }}
    node.name: ${POD_NAME}.${WORKLOAD_NAME}
    
    # Node roles based on environment variable
    node.roles: [ ${NODE_ROLES} ]
    
    # Discovery configuration
    discovery.seed_hosts:
    {{- if .Values.elasticsearch.nodes.master.enabled }}
    {{- range $i := until (.Values.elasticsearch.nodes.master.replicas | int) }}
      - es-master-{{ $i }}.es-master
    {{- end }}
    {{- end }}
    
    # Initial master nodes
    cluster.initial_master_nodes:
    {{- if .Values.elasticsearch.nodes.master.enabled }}
    {{- range $i := until (.Values.elasticsearch.nodes.master.replicas | int) }}
      - es-master-{{ $i }}.es-master
    {{- end }}
    {{- end }}
---
kind: secret
name: elasticsearch-init
type: opaque
data:
  encoding: plain
  payload: |-
    #!/bin/bash

    set -o errexit
    set -o nounset
    set -o pipefail

    error(){
      local message="${1:?missing message}"
      echo "ERROR: ${message}"
      exit 1
    }

    cp /usr/share/elasticsearch/config-custom/elasticsearch.yml /usr/share/elasticsearch/config/elasticsearch.yml

    ELASTIC_CONFIG_FILE=/usr/share/elasticsearch/config/elasticsearch.yml

    replace_placeholder() {
      local placeholder="${1:?missing placeholder value}"
      local value="${2:?missing value}"
      sed -i "s/$placeholder/$value/g" "$ELASTIC_CONFIG_FILE"
    }

    POD_ID=$(echo "$POD_NAME" | rev | cut -d'-' -f 1 | rev)
    WORKLOAD_NAME=$(echo $CPLN_WORKLOAD | sed 's|.*/workload/\([^/]*\)$|\1|')

    replace_placeholder "workload-name-placeholder" "${WORKLOAD_NAME}"
    replace_placeholder "node-name-placeholder" "${POD_NAME}.${WORKLOAD_NAME}"

    /usr/local/bin/docker-entrypoint.sh
